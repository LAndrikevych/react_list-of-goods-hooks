{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortBy","setSortType","sortedList","goods","visibleGoods","ALPHABET","sort","goodA","goodB","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,oBAAkB,GAAlD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,mBAAmBH,EAASQ,MAA1D,mBAAOC,EAAP,KAAeC,EAAf,KA+BA,IAAMC,EA7BN,SACEC,GAIA,IAAMC,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKT,EAASc,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAExD,MAEF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAY7D,OAJId,GACFO,EAAaQ,UAGRR,EAGUS,CAAkBrB,GAerC,OACE,sBAAKsB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,4BAIEnB,GACA,wBACEmB,UAAU,yBAIVC,KAAK,SACLC,QA1BM,WACZpB,GAAYD,IAmBR,mBAYDA,GACC,sBAAKmB,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAU,6BAIVC,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASc,WANtC,iCAWA,wBACES,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASmB,SAHtC,4BAQA,wBACEI,UAAU,SACVC,KAAK,SACLC,QArDI,WACdlB,GAAaD,IAiDL,qBAQA,wBACEiB,UAAU,SACVC,KAAK,SACLC,QAzDE,WACZf,EAAYV,EAASQ,MACrBD,GAAY,IAoDJ,sBASF,oBACEgB,UAAU,QADZ,SAGGZ,EAAWe,KAAI,SAAAC,GAAI,OAClB,oBAAIJ,UAAU,cAAd,SACE,4BAAII,KAD2BA,eCnI/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9fa8a8aa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'None',\n  ALPHABET = 'Alphabet',\n  LENGTH = 'Length',\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState<boolean>(false);\n  const [isReversed, setReversed] = useState<boolean>(false);\n  const [sortBy, setSortType] = useState<SortType>(SortType.NONE);\n\n  function getReorderedGoods(\n    goods: string[],\n    // sortBy: SortType,\n    // isReversed: boolean,\n  ): string[] {\n    const visibleGoods = [...goods];\n\n    switch (sortBy) {\n      case SortType.ALPHABET:\n        visibleGoods.sort((goodA, goodB) => goodA.localeCompare(goodB));\n\n        break;\n\n      case SortType.LENGTH:\n        visibleGoods.sort((goodA, goodB) => goodA.length - goodB.length);\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  }\n\n  const sortedList = getReorderedGoods(goodsFromServer);\n\n  const start = () => {\n    setStarted(!isStarted);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        List of Goods\n      </h1>\n\n      {!isStarted && (\n        <button\n          className=\"\n            button\n            button--start\n          \"\n          type=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <div className=\"App__content\">\n          <div className=\"buttons\">\n            <button\n              className=\"\n                button\n                button--sort-name\n              \"\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPHABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul\n            className=\"Goods\"\n          >\n            {sortedList.map(good => (\n              <li className=\"Goods__item\" key={good}>\n                <p>{good}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}